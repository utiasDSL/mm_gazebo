<?xml version="1.0"?>
<robot name="ridgeback" xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:property name="PI" value="3.1415926535897931" />

  <xacro:property name="wheel_radius" value="0.0759" />
  <xacro:property name="wheel_width" value="0.0790" />

  <xacro:property name="chassis_length" value="0.960" />
  <xacro:property name="chassis_width" value="0.793" />
  <xacro:property name="chassis_height" value="0.216" />
  <xacro:property name="deck_height" value="0.280" />

  <xacro:property name="axle_offset" value="0.0500" />
  <xacro:property name="rocker_offset" value="0.319" />
  <xacro:property name="rocker_width" value="0.472" />

  <xacro:property name="imu_offset_x" value="0.2085" />
  <xacro:property name="imu_offset_y" value="-0.2902" />
  <xacro:property name="imu_offset_z" value="0.1681" />

  <xacro:property name="dummy_inertia" value="1e-09"/>


  <material name="dark_grey"><color rgba="0.2 0.2 0.2 1.0" /></material>
  <material name="light_grey"><color rgba="0.4 0.4 0.4 1.0" /></material>
  <material name="yellow"><color rgba="0.8 0.8 0.0 1.0" /></material>
  <material name="black"><color rgba="0.15 0.15 0.15 1.0" /></material>

  <xacro:macro name="wheel" params="prefix side *joint_pose">
    <link name="${prefix}_${side}_wheel_link">
      <visual>
        <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
        <geometry>
          <mesh filename="package://ridgeback_description/meshes/wheel.stl"/>
        </geometry>
        <material name="black" />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>
      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="0.477"/>
        <inertia
          ixx="0.0013" ixy="0" ixz="0"
          iyy="0.0024" iyz="0"
          izz="0.0013"/>
      </inertial>
    </link>

    <joint name="${prefix}_${side}_wheel" type="continuous">
      <parent link="${prefix}_rocker_link"/>
      <child link="${prefix}_${side}_wheel_link" />
      <xacro:insert_block name="joint_pose" />
      <axis xyz="0 1 0" />
    </joint>

    <transmission name="${prefix}_wheel_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${prefix}_${side}_wheel">
        <hardwareInterface>VelocityJointInterface</hardwareInterface>
      </joint>
      <actuator name="${prefix}_${side}_actuator">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>
  </xacro:macro>


  <xacro:macro name="rocker" params="prefix joint_type location *joint_limits">
    <link name="${prefix}_rocker_link">
      <visual>
        <origin xyz="0 0 0" rpy="${PI/2} 0 ${PI/2}" />
        <geometry>
          <mesh filename="package://ridgeback_description/meshes/rocker.stl"/>
        </geometry>
        <material name="black" />
      </visual>
      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="3"/>
        <inertia
          ixx="0.001" ixy="0" ixz="0"
          iyy="0.001" iyz="0"
          izz="0.001"/>
      </inertial>
    </link>

    <joint name="${prefix}_rocker" type="${joint_type}">
      <parent link="axle_link"/>
      <child link="${prefix}_rocker_link" />
      <origin xyz="${location*rocker_offset} 0 0" rpy="0 0 0" />
      <axis xyz="1 0 0" />
      <xacro:insert_block name="joint_limits" />
    </joint>

    <xacro:wheel prefix="${prefix}" side="left">
      <origin xyz="0 ${rocker_width/2 + wheel_width/2} 0" rpy="0 0 0" />
    </xacro:wheel>
    <xacro:wheel prefix="${prefix}" side="right">
      <origin xyz="0 ${-(rocker_width/2 + wheel_width/2)} 0" rpy="0 0 0" />
    </xacro:wheel>
  </xacro:macro>

  <!-- DISABLING (joint limits) FREE ROCKER FOR NOW BECAUSE ROBOT SLIDES WITH IT-->
  <!--xacro:rocker prefix="front" joint_type="revolute" location="1" >
    <limit lower="0.08726" upper="0.08726" position="0" effort="0" velocity="0" />
  </xacro:rocker-->

  <xacro:rocker prefix="front" joint_type="fixed" location="1" >
    <limit effort="0" velocity="0" />
  </xacro:rocker>

  <xacro:rocker prefix="rear" joint_type="fixed" location="-1" >
    <limit effort="0" velocity="0" />
  </xacro:rocker>

  <link name="base_link"></link>

  <joint name="base_link_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <parent link="base_link"/>
    <child link="chassis_link" />
  </joint>

  <link name="chassis_link">
    <visual>
      <origin xyz="0 0 0" rpy=" ${PI/2} 0 ${PI/2}" />
      <geometry>
        <mesh filename="package://ridgeback_description/meshes/body.stl"/>
      </geometry>
      <material name="black" />
    </visual>
    <collision>
      <origin xyz="0 0 ${chassis_height/2}"/>
      <geometry>
        <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0.012 0.002 0.067" rpy="0 0 0"/>
      <mass value="50"/>
      <inertia
        ixx="1.3136" ixy="0.0" ixz="0.0"
        iyy="1.3922" iyz="0.0"
        izz="2.0"/>
    </inertial>
  </link>

  <joint name="front_cover_link_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <parent link="chassis_link"/>
    <child link="front_cover_link" />
  </joint>

  <link name="front_cover_link">
    <visual>
      <origin xyz="0 0 0" rpy=" ${PI/2} 0 ${-PI/2}"  />
      <geometry>
        <mesh filename="package://ridgeback_description/meshes/end-cover.stl" />
      </geometry>
      <material name="black" />
    </visual>
  </link>

  <joint name="rear_cover_link_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <parent link="chassis_link"/>
    <child link="rear_cover_link" />
  </joint>

  <link name="rear_cover_link">
    <visual>
      <origin xyz="0 0 0" rpy=" ${PI/2} 0 ${PI/2}"  />
      <geometry>
        <mesh filename="package://ridgeback_description/meshes/end-cover.stl" />
      </geometry>
      <material name="black" />
    </visual>
  </link>

  <joint name="top_link_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <parent link="chassis_link"/>
    <child link="top_link" />
  </joint>

  <link name="top_link">
    <visual>
      <origin xyz="${-chassis_length/2} ${-chassis_width/2} 0" rpy=" ${PI/2} 0 ${PI/2}" />
      <geometry>
        <mesh filename="package://ridgeback_description/meshes/top.stl" />
      </geometry>
      <material name="black" />
    </visual>
  </link>

  <joint name="ridgeback_x" type="continuous">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <parent link="chassis_link"/>
    <child link="top_link2" />
  </joint>
  <joint name="ridgeback_y" type="continuous">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <parent link="chassis_link"/>
    <child link="top_link3" />
  </joint>
  <joint name="ridgeback_theta" type="continuous">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <parent link="chassis_link"/>
    <child link="top_link4" />
  </joint>


  <link name="top_link2" />
  <link name="top_link3" />
  <link name="top_link4" />



  <joint name="axle_joint" type="fixed">
    <origin xyz="0 0 ${axle_offset}" rpy="0 0 0" />
    <parent link="chassis_link"/>
    <child link="axle_link" />
  </joint>

  <link name="axle_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 ${PI/2} 0" />
      <geometry>
        <mesh filename="package://ridgeback_description/meshes/axle.stl" />
      </geometry>
      <material name="black" />
    </visual>
  </link>

  <link name="imu_link">
    <inertial>
      <mass value="0.001"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="${dummy_inertia}" ixy="0.0" ixz="0.0" iyy="${dummy_inertia}" iyz="0.0" izz="${dummy_inertia}"/>
    </inertial>
  </link>
  <joint name="imu_joint" type="fixed">
    <parent link="chassis_link" />
    <child link="imu_link" />
    <origin xyz="${imu_offset_x} ${imu_offset_y} ${imu_offset_z}" rpy="0 0 0"/>
  </joint>

  <link name="mid_mount" />
  <joint name="mid_mount_joint" type="fixed">
    <parent link="base_link" />
    <child link="mid_mount" />
    <origin xyz="0 0 ${deck_height}" rpy="0 0 0"/>
  </joint>

  <!-- Bring in simulation data for Gazebo. -->
  <xacro:include filename="$(find mm_description)/urdf/ridgeback.gazebo" />


  <!-- Spawn arch -->
  <link name="arch_link">
		<visual>
			<geometry>
				<mesh filename="package://mm_description/meshes/tor11_mech.dae" />
			</geometry>
		</visual>

		<collision>
			<geometry>
				<mesh filename="package://mm_description/meshes/tor11_mech.dae" />
			</geometry>
		</collision>
   </link>

  <joint name="arch_joint" type="fixed">
	  <origin xyz="0 0 0.278" rpy="0 0 ${PI/2}" />
	  <parent link="top_link" />
	  <child link="arch_link" />
  </joint>

  <!-- Spawn UR10 arm -->
  <xacro:include filename="$(find mm_description)/urdf/ur10.urdf.xacro" />
  <xacro:ur10_robot prefix="ur10_arm_" joint_limited="false"/>

  <!-- Tool frame -->
  <xacro:property name="TCP_offset" value="0.29" />  <!-- must also be changed in thing_kinematics.h if changed here -->
  <link name="thing_tool"/>
  <joint name="tool0_tcp_fixed_joint" type="fixed">
    <origin xyz="0.0 0.0 ${TCP_offset}" rpy="1.5707963 0.0 0.26179939"/>
    <parent link="ur10_arm_tool0"/>
    <child link="thing_tool"/>
  </joint>


  <!-- tool0_controller from ur_modern_driver.. should give better estimate than urdf alone. doesn't get launched with ros control though -->
  <!--
  <link name="tool0_controller"/>
  <joint name="base-tool0_controller_floating_joint" type="floating">
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <child link="tool0_controller"/>
    <parent link="ur10_arm_base_link"/>
  </joint> -->


  <!-- Join arm -->
  <joint name="ur10_arm_base" type="fixed">
	  <parent link="arch_link" />
	  <child link="ur10_arm_base_link" />
	  <origin xyz="0.01 -0.27 0.375" rpy="0.0 0.0 ${PI/2}" />
  </joint>

  <!-- wrist camera mount -->
  <link name="wrist_cam_mount_link">
		<visual>
      <origin xyz="0.00975 -.1375 -0.0375" rpy="0 ${-PI/2} 0" />
			<geometry>
        <mesh filename="package://mm_description/meshes/ur_sensor_vicon_mount_tonge_holes.stl" scale="0.001 0.001 0.001" />
			</geometry>
      <material name="black" />
		</visual>

    <!-- TODO: this should be simpler geometry than the mesh to make collision detection faster -->
		<collision>
      <origin xyz="0.00975 -.1375 -0.0375" rpy="0 ${-PI/2} 0" />
			<geometry>
        <mesh filename="package://mm_description/meshes/ur_sensor_vicon_mount_tonge_holes.stl" scale="0.001 0.001 0.001" />
			</geometry>
		</collision>
   </link>

   <!-- mounted at 15 degrees off of the wire attachment on ur10 -->
   <joint name="wrist_cam_mount_joint" type="fixed">
 	  <origin xyz="0.004 0 0" rpy="${-5*PI/12} 0 0" />
 	  <parent link="ur10_arm_ee_link" />
 	  <child link="wrist_cam_mount_link" />
   </joint>

  <!-- Spawn and Join Gripper. Giving it a prefix of l_ to work with gazebo plugin -->
  <!--<xacro:s-model_articulated prefix="" />-->

<!-- origin, may be worth fixing better later: .03m from center of .06 long FT sensor plus extra link pieces, palm is 104.8mm long so assuming frame is at 52.4mm, minus 9.5mm for coupling -->
  <xacro:include filename="$(find robotiq_s_model_visualization)/cfg/robotiq_hand_macro.urdf.xacro" />
  <xacro:robotiq_hand prefix="l_" parent="ur10_arm_ee_link" reflect="-1">
    <origin xyz="0.11 0.0 0.0" rpy="0.0 ${PI/12} -${PI/2}"/>
  </xacro:robotiq_hand>

  <!-- gazebo for gripper -->
   <gazebo>
    <plugin name="robotiq_hand_plugin" filename="libRobotiqHandPlugin.so">
      <side>left</side>
      <kp_position>10.0</kp_position>
      <kd_position>0.5</kd_position>
    </plugin>
  </gazebo>

  <!-- Inflate collision geometry near connectors-->
  <!--
  <link name="arm_connector_collision_space">
    <collision>
      <geometry>
      <cylinder length="0.07" radius="0.125"/>
      </geometry>
    </collision>
  </link>

  <joint name="arm_connector_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <parent link="ur10_arm_base_link" />
    <child link="arm_connector_collision_space" />
  </joint>

  <link name="EE_connector_collision_space">
    <collision>
      <geometry>
      <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>
  </link>

  <joint name="EE_connector_joint" type="fixed">
    <origin xyz="0.05 0 0" rpy="0 0 0" />
    <parent link="l_palm" />
    <child link="EE_connector_collision_space" />
  </joint>
  -->

  <!-- Sensor Mount and other custom parts -->
  <link name="FT300_link">
		<visual>
			<geometry>
				<cylinder length="0.06" radius="0.035"/>
			</geometry>
			<material name="black"/>
		</visual>

		<collision>
			<geometry>
				<cylinder length="0.0475" radius="0.035"/>
			</geometry>
		</collision>
   </link>

  <joint name="FT300_joint" type="fixed">
	  <origin xyz="0.03 0 0" rpy="0 1.57 0" />
	  <parent link="wrist_cam_mount_link" />
	  <child link="FT300_link" />
  </joint>

  <gazebo reference="ur10_arm_wrist_3_joint">
    <provideFeedback>true</provideFeedback>
  </gazebo>

  <!-- The ft_sensor plugin -->
  <gazebo>
    <plugin name="ft_sensor" filename="libgazebo_ros_ft_sensor.so">
        <updateRate>100.0</updateRate>
        <topicName>robotiq_force_torque_wrench</topicName>
        <jointName>ur10_arm_wrist_3_joint</jointName>
        <!--<jointName>FT300_joint</jointName>-->
    </plugin>
  </gazebo>

  <!-- HOKUYO UST-10LX LASER -->
  <xacro:macro name="hokuyo_ust-10lx_mount" params="prefix topic location">

    <joint name="${prefix}_laser_joint" type="fixed">
      <origin xyz="${location * 0.3932} 0 0.2330" rpy="0 0 ${PI/2 - (location * PI/2)}" />
      <parent link="chassis_link" />
      <child link="${prefix}_laser" />
    </joint>

    <link name="${prefix}_laser">
      <inertial>
        <mass value="0.130" />
        <origin xyz="0 0 0" />
        <inertia ixx="${0.0833333 * 0.130 * (0.05*0.05 + 0.07*0.07)}" ixy="0.0" ixz="0.0"
          iyy="${0.0833333 * 0.130 * (0.05*0.05 + 0.07*0.07)}" iyz="0.0"
          izz="${0.0833333 * 0.130 * (0.05*0.05 + 0.05*0.05)}" />
      </inertial>
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <!-- Origin of this mesh is the focal point of the LIDAR. -->
          <mesh filename="package://ridgeback_description/meshes/ust-10lx.stl" />
        </geometry>
        <material name="dark_grey" />
      </visual>
      <collision>
        <origin xyz="0 0 -0.0122" rpy="0 0 0" />
        <geometry>
          <box size="0.05 0.05 0.07" />
        </geometry>
      </collision>
    </link>

    <gazebo reference="${prefix}_laser">
      <turnGravityOff>false</turnGravityOff>
      <sensor type="ray" name="${prefix}_laser">
        <pose>0 0 0 0 0 0</pose>
        <visualize>false</visualize>
        <update_rate>50</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>720</samples>
              <resolution>1</resolution>
              <min_angle>-2.35619</min_angle>
              <max_angle>2.35619</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.20</min>
            <max>10.0</max>
            <resolution>0.01</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="gazebo_ros_laser" filename="libgazebo_ros_laser.so">
          <topicName>${topic}</topicName>
          <frameName>${prefix}_laser</frameName>
          <hokuyoMinIntensity>101</hokuyoMinIntensity>
        </plugin>
      </sensor>
    </gazebo>

  </xacro:macro>
  <xacro:hokuyo_ust-10lx_mount prefix="front"
                               topic="front/scan"
                               location="1" />
</robot>
